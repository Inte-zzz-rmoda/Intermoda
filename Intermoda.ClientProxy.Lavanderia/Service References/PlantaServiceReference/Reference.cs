//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intermoda.ClientProxy.Lavanderia.PlantaServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlantaBusiness", Namespace="http://schemas.datacontract.org/2004/07/Intermoda.Business.Lavanderia")]
    [System.SerializableAttribute()]
    public partial class PlantaBusiness : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompaniaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PropietariaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompaniaId {
            get {
                return this.CompaniaIdField;
            }
            set {
                if ((this.CompaniaIdField.Equals(value) != true)) {
                    this.CompaniaIdField = value;
                    this.RaisePropertyChanged("CompaniaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observacion {
            get {
                return this.ObservacionField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservacionField, value) != true)) {
                    this.ObservacionField = value;
                    this.RaisePropertyChanged("Observacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Propietaria {
            get {
                return this.PropietariaField;
            }
            set {
                if ((this.PropietariaField.Equals(value) != true)) {
                    this.PropietariaField = value;
                    this.RaisePropertyChanged("Propietaria");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlantaServiceReference.IPlanta")]
    public interface IPlanta {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/Update", ReplyAction="http://tempuri.org/IPlanta/UpdateResponse")]
        Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness Update(Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness planta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/Update", ReplyAction="http://tempuri.org/IPlanta/UpdateResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness> UpdateAsync(Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness planta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/Delete", ReplyAction="http://tempuri.org/IPlanta/DeleteResponse")]
        void Delete(int plantaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/Delete", ReplyAction="http://tempuri.org/IPlanta/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int plantaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/Get", ReplyAction="http://tempuri.org/IPlanta/GetResponse")]
        Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness Get(int plantaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/Get", ReplyAction="http://tempuri.org/IPlanta/GetResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness> GetAsync(int plantaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/GetAll", ReplyAction="http://tempuri.org/IPlanta/GetAllResponse")]
        Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/GetAll", ReplyAction="http://tempuri.org/IPlanta/GetAllResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/GetByCompania", ReplyAction="http://tempuri.org/IPlanta/GetByCompaniaResponse")]
        Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness[] GetByCompania(int companiaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanta/GetByCompania", ReplyAction="http://tempuri.org/IPlanta/GetByCompaniaResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness[]> GetByCompaniaAsync(int companiaId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlantaChannel : Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.IPlanta, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlantaClient : System.ServiceModel.ClientBase<Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.IPlanta>, Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.IPlanta {
        
        public PlantaClient() {
        }
        
        public PlantaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlantaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlantaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlantaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness Update(Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness planta) {
            return base.Channel.Update(planta);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness> UpdateAsync(Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness planta) {
            return base.Channel.UpdateAsync(planta);
        }
        
        public void Delete(int plantaId) {
            base.Channel.Delete(plantaId);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int plantaId) {
            return base.Channel.DeleteAsync(plantaId);
        }
        
        public Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness Get(int plantaId) {
            return base.Channel.Get(plantaId);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness> GetAsync(int plantaId) {
            return base.Channel.GetAsync(plantaId);
        }
        
        public Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness[] GetByCompania(int companiaId) {
            return base.Channel.GetByCompania(companiaId);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.PlantaServiceReference.PlantaBusiness[]> GetByCompaniaAsync(int companiaId) {
            return base.Channel.GetByCompaniaAsync(companiaId);
        }
    }
}
