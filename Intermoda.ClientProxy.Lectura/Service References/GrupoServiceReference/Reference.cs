//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intermoda.ClientProxy.Lectura.GrupoServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GrupoBusiness", Namespace="http://schemas.datacontract.org/2004/07/Intermoda.Business.Lecturas")]
    [System.SerializableAttribute()]
    public partial class GrupoBusiness : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaFinalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaInicioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecuenciaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoField, value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((this.EstadoField.Equals(value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaFinal {
            get {
                return this.FechaFinalField;
            }
            set {
                if ((this.FechaFinalField.Equals(value) != true)) {
                    this.FechaFinalField = value;
                    this.RaisePropertyChanged("FechaFinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaInicio {
            get {
                return this.FechaInicioField;
            }
            set {
                if ((this.FechaInicioField.Equals(value) != true)) {
                    this.FechaInicioField = value;
                    this.RaisePropertyChanged("FechaInicio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Secuencia {
            get {
                return this.SecuenciaField;
            }
            set {
                if ((this.SecuenciaField.Equals(value) != true)) {
                    this.SecuenciaField = value;
                    this.RaisePropertyChanged("Secuencia");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GrupoServiceReference.IGrupo")]
    public interface IGrupo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/Update", ReplyAction="http://tempuri.org/IGrupo/UpdateResponse")]
        Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness Update(Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness grupoBusiness);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/Update", ReplyAction="http://tempuri.org/IGrupo/UpdateResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness> UpdateAsync(Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness grupoBusiness);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/Delete", ReplyAction="http://tempuri.org/IGrupo/DeleteResponse")]
        void Delete(int grupoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/Delete", ReplyAction="http://tempuri.org/IGrupo/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int grupoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/Get", ReplyAction="http://tempuri.org/IGrupo/GetResponse")]
        Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness Get(int grupoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/Get", ReplyAction="http://tempuri.org/IGrupo/GetResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness> GetAsync(int grupoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/GetAll", ReplyAction="http://tempuri.org/IGrupo/GetAllResponse")]
        Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/GetAll", ReplyAction="http://tempuri.org/IGrupo/GetAllResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/GetAllActivos", ReplyAction="http://tempuri.org/IGrupo/GetAllActivosResponse")]
        Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness[] GetAllActivos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/GetAllActivos", ReplyAction="http://tempuri.org/IGrupo/GetAllActivosResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness[]> GetAllActivosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/GetByLinea", ReplyAction="http://tempuri.org/IGrupo/GetByLineaResponse")]
        Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness GetByLinea(int lineaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/GetByLinea", ReplyAction="http://tempuri.org/IGrupo/GetByLineaResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness> GetByLineaAsync(int lineaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/CopiarSemana", ReplyAction="http://tempuri.org/IGrupo/CopiarSemanaResponse")]
        void CopiarSemana(System.DateTime desde, System.DateTime hasta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/CopiarSemana", ReplyAction="http://tempuri.org/IGrupo/CopiarSemanaResponse")]
        System.Threading.Tasks.Task CopiarSemanaAsync(System.DateTime desde, System.DateTime hasta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/HayDataSemana", ReplyAction="http://tempuri.org/IGrupo/HayDataSemanaResponse")]
        bool HayDataSemana(System.DateTime fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGrupo/HayDataSemana", ReplyAction="http://tempuri.org/IGrupo/HayDataSemanaResponse")]
        System.Threading.Tasks.Task<bool> HayDataSemanaAsync(System.DateTime fecha);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGrupoChannel : Intermoda.ClientProxy.Lectura.GrupoServiceReference.IGrupo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GrupoClient : System.ServiceModel.ClientBase<Intermoda.ClientProxy.Lectura.GrupoServiceReference.IGrupo>, Intermoda.ClientProxy.Lectura.GrupoServiceReference.IGrupo {
        
        public GrupoClient() {
        }
        
        public GrupoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GrupoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GrupoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GrupoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness Update(Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness grupoBusiness) {
            return base.Channel.Update(grupoBusiness);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness> UpdateAsync(Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness grupoBusiness) {
            return base.Channel.UpdateAsync(grupoBusiness);
        }
        
        public void Delete(int grupoId) {
            base.Channel.Delete(grupoId);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int grupoId) {
            return base.Channel.DeleteAsync(grupoId);
        }
        
        public Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness Get(int grupoId) {
            return base.Channel.Get(grupoId);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness> GetAsync(int grupoId) {
            return base.Channel.GetAsync(grupoId);
        }
        
        public Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness[] GetAllActivos() {
            return base.Channel.GetAllActivos();
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness[]> GetAllActivosAsync() {
            return base.Channel.GetAllActivosAsync();
        }
        
        public Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness GetByLinea(int lineaId) {
            return base.Channel.GetByLinea(lineaId);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.GrupoServiceReference.GrupoBusiness> GetByLineaAsync(int lineaId) {
            return base.Channel.GetByLineaAsync(lineaId);
        }
        
        public void CopiarSemana(System.DateTime desde, System.DateTime hasta) {
            base.Channel.CopiarSemana(desde, hasta);
        }
        
        public System.Threading.Tasks.Task CopiarSemanaAsync(System.DateTime desde, System.DateTime hasta) {
            return base.Channel.CopiarSemanaAsync(desde, hasta);
        }
        
        public bool HayDataSemana(System.DateTime fecha) {
            return base.Channel.HayDataSemana(fecha);
        }
        
        public System.Threading.Tasks.Task<bool> HayDataSemanaAsync(System.DateTime fecha) {
            return base.Channel.HayDataSemanaAsync(fecha);
        }
    }
}
