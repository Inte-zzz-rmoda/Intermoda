//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecadoraBusiness", Namespace="http://schemas.datacontract.org/2004/07/Intermoda.Business.Lavanderia")]
    [System.SerializableAttribute()]
    public partial class SecadoraBusiness : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionMacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarcaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeloField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumeroSerieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraCapacidadBusiness SecadoraCapacidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SecadoraCapacidadIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DireccionIp {
            get {
                return this.DireccionIpField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionIpField, value) != true)) {
                    this.DireccionIpField = value;
                    this.RaisePropertyChanged("DireccionIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DireccionMac {
            get {
                return this.DireccionMacField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionMacField, value) != true)) {
                    this.DireccionMacField = value;
                    this.RaisePropertyChanged("DireccionMac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((this.EstadoField.Equals(value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marca {
            get {
                return this.MarcaField;
            }
            set {
                if ((object.ReferenceEquals(this.MarcaField, value) != true)) {
                    this.MarcaField = value;
                    this.RaisePropertyChanged("Marca");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modelo {
            get {
                return this.ModeloField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeloField, value) != true)) {
                    this.ModeloField = value;
                    this.RaisePropertyChanged("Modelo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumeroSerie {
            get {
                return this.NumeroSerieField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroSerieField, value) != true)) {
                    this.NumeroSerieField = value;
                    this.RaisePropertyChanged("NumeroSerie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraCapacidadBusiness SecadoraCapacidad {
            get {
                return this.SecadoraCapacidadField;
            }
            set {
                if ((object.ReferenceEquals(this.SecadoraCapacidadField, value) != true)) {
                    this.SecadoraCapacidadField = value;
                    this.RaisePropertyChanged("SecadoraCapacidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SecadoraCapacidadId {
            get {
                return this.SecadoraCapacidadIdField;
            }
            set {
                if ((this.SecadoraCapacidadIdField.Equals(value) != true)) {
                    this.SecadoraCapacidadIdField = value;
                    this.RaisePropertyChanged("SecadoraCapacidadId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecadoraCapacidadBusiness", Namespace="http://schemas.datacontract.org/2004/07/Intermoda.Business.Lavanderia")]
    [System.SerializableAttribute()]
    public partial class SecadoraCapacidadBusiness : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CapacidadMaximaKgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CapacidadMinimaKgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CapacidadMaximaKg {
            get {
                return this.CapacidadMaximaKgField;
            }
            set {
                if ((this.CapacidadMaximaKgField.Equals(value) != true)) {
                    this.CapacidadMaximaKgField = value;
                    this.RaisePropertyChanged("CapacidadMaximaKg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CapacidadMinimaKg {
            get {
                return this.CapacidadMinimaKgField;
            }
            set {
                if ((this.CapacidadMinimaKgField.Equals(value) != true)) {
                    this.CapacidadMinimaKgField = value;
                    this.RaisePropertyChanged("CapacidadMinimaKg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecadoraServiceReference.ISecadora")]
    public interface ISecadora {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/Update", ReplyAction="http://tempuri.org/ISecadora/UpdateResponse")]
        Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness Update(Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness secadora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/Update", ReplyAction="http://tempuri.org/ISecadora/UpdateResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness> UpdateAsync(Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness secadora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/Delete", ReplyAction="http://tempuri.org/ISecadora/DeleteResponse")]
        void Delete(int secadoraId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/Delete", ReplyAction="http://tempuri.org/ISecadora/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int secadoraId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/Get", ReplyAction="http://tempuri.org/ISecadora/GetResponse")]
        Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness Get(int secadoraId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/Get", ReplyAction="http://tempuri.org/ISecadora/GetResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness> GetAsync(int secadoraId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/GetAll", ReplyAction="http://tempuri.org/ISecadora/GetAllResponse")]
        Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/GetAll", ReplyAction="http://tempuri.org/ISecadora/GetAllResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/GetByCapacidad", ReplyAction="http://tempuri.org/ISecadora/GetByCapacidadResponse")]
        Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness[] GetByCapacidad(int secadoraCapacidadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecadora/GetByCapacidad", ReplyAction="http://tempuri.org/ISecadora/GetByCapacidadResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness[]> GetByCapacidadAsync(int secadoraCapacidadId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecadoraChannel : Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.ISecadora, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecadoraClient : System.ServiceModel.ClientBase<Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.ISecadora>, Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.ISecadora {
        
        public SecadoraClient() {
        }
        
        public SecadoraClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SecadoraClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecadoraClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecadoraClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness Update(Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness secadora) {
            return base.Channel.Update(secadora);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness> UpdateAsync(Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness secadora) {
            return base.Channel.UpdateAsync(secadora);
        }
        
        public void Delete(int secadoraId) {
            base.Channel.Delete(secadoraId);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int secadoraId) {
            return base.Channel.DeleteAsync(secadoraId);
        }
        
        public Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness Get(int secadoraId) {
            return base.Channel.Get(secadoraId);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness> GetAsync(int secadoraId) {
            return base.Channel.GetAsync(secadoraId);
        }
        
        public Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness[] GetByCapacidad(int secadoraCapacidadId) {
            return base.Channel.GetByCapacidad(secadoraCapacidadId);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lavanderia.SecadoraServiceReference.SecadoraBusiness[]> GetByCapacidadAsync(int secadoraCapacidadId) {
            return base.Channel.GetByCapacidadAsync(secadoraCapacidadId);
        }
    }
}
