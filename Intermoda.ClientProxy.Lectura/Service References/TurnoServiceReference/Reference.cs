//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intermoda.ClientProxy.Lectura.TurnoServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TurnoBusiness", Namespace="http://schemas.datacontract.org/2004/07/Intermoda.Business.Lecturas")]
    [System.SerializableAttribute()]
    public partial class TurnoBusiness : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoField, value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TurnoServiceReference.ITurno")]
    public interface ITurno {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/Update", ReplyAction="http://tempuri.org/ITurno/UpdateResponse")]
        Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness Update(Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness turno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/Update", ReplyAction="http://tempuri.org/ITurno/UpdateResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness> UpdateAsync(Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness turno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/Delete", ReplyAction="http://tempuri.org/ITurno/DeleteResponse")]
        void Delete(int turnoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/Delete", ReplyAction="http://tempuri.org/ITurno/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int turnoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/Get", ReplyAction="http://tempuri.org/ITurno/GetResponse")]
        Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness Get(int turnoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/Get", ReplyAction="http://tempuri.org/ITurno/GetResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness> GetAsync(int turnoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetAll", ReplyAction="http://tempuri.org/ITurno/GetAllResponse")]
        Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetAll", ReplyAction="http://tempuri.org/ITurno/GetAllResponse")]
        System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness[]> GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITurnoChannel : Intermoda.ClientProxy.Lectura.TurnoServiceReference.ITurno, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TurnoClient : System.ServiceModel.ClientBase<Intermoda.ClientProxy.Lectura.TurnoServiceReference.ITurno>, Intermoda.ClientProxy.Lectura.TurnoServiceReference.ITurno {
        
        public TurnoClient() {
        }
        
        public TurnoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TurnoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TurnoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TurnoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness Update(Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness turno) {
            return base.Channel.Update(turno);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness> UpdateAsync(Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness turno) {
            return base.Channel.UpdateAsync(turno);
        }
        
        public void Delete(int turnoId) {
            base.Channel.Delete(turnoId);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int turnoId) {
            return base.Channel.DeleteAsync(turnoId);
        }
        
        public Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness Get(int turnoId) {
            return base.Channel.Get(turnoId);
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness> GetAsync(int turnoId) {
            return base.Channel.GetAsync(turnoId);
        }
        
        public Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Intermoda.ClientProxy.Lectura.TurnoServiceReference.TurnoBusiness[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
    }
}
